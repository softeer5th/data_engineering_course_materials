services:
  namenode:
    image: ubuntu/hadoop:latest
    container_name: namenode
    hostname: namenode
    ports:
      - "9870:9870"  # HDFS Web UI
    volumes:
      - ./data/namenode:/usr/local/hadoop/tmp/dfs/name
    environment:
      HDFS_NAMENODE_USER: hdfs
      HDFS_SECONDARYNAMENODE_USER: hdfs
    user: hdfs
    networks:
      - hadoop-network

  datanode1:
    image: ubuntu/hadoop:latest
    container_name: datanode1
    hostname: datanode1
    volumes:
      - ./data/datanode1:/usr/local/hadoop/tmp/dfs/data
    environment:
      HDFS_DATANODE_USER: hdfs
    user: hdfs
    depends_on:
      - namenode
    networks:
      - hadoop-network

  datanode2:
    image: ubuntu/hadoop:latest
    container_name: datanode2
    hostname: datanode2
    volumes:
      - ./data/datanode2:/usr/local/hadoop/tmp/dfs/data
    environment:
      HDFS_DATANODE_USER: hdfs
    user: hdfs
    depends_on:
      - namenode
    networks:
      - hadoop-network

  resourcemanager:
    image: ubuntu/hadoop:latest
    container_name: resourcemanager
    hostname: resourcemanager
    ports:
      - "8088:8088"  # YARN ResourceManager Web UI
    environment:
      YARN_RESOURCEMANAGER_USER: yarn
    user: yarn
    networks:
      - hadoop-network

  nodemanager1:
    image: ubuntu/hadoop:latest
    container_name: nodemanager1
    hostname: nodemanager1
    environment:
      YARN_NODEMANAGER_USER: yarn
    user: yarn
    depends_on:
      - resourcemanager
    networks:
      - hadoop-network
  
  nodemanager2:
    image: ubuntu/hadoop:latest
    container_name: nodemanager2
    hostname: nodemanager2
    environment:
      YARN_NODEMANAGER_USER: yarn
    user: yarn
    depends_on:
      - resourcemanager
    networks:
      - hadoop-network

networks:
  hadoop-network:
    driver: bridge
